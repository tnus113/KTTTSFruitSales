// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using btn.Data;

#nullable disable

namespace btn.Migrations
{
    [DbContext(typeof(FruitSalesContext))]
    [Migration("20241031092749_alterTable")]
    partial class alterTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("btn.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("btn.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("btn.Models.ImportBill", b =>
                {
                    b.Property<int>("ImportBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportBillId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImportsDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ImportBillId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProviderId");

                    b.ToTable("ImportBill", (string)null);
                });

            modelBuilder.Entity("btn.Models.ImportBillDetail", b =>
                {
                    b.Property<int>("ImportBillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportBillDetailId"), 1L, 1);

                    b.Property<int>("ImportBillId")
                        .HasColumnType("int");

                    b.Property<decimal>("ImportDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductImportAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImportBillDetailId");

                    b.HasIndex("ImportBillId");

                    b.HasIndex("ProductId");

                    b.ToTable("ImportBillDetail", (string)null);
                });

            modelBuilder.Entity("btn.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MoneyOnImport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoneyOnSell")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvidePlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SellBillDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("SellBillDetailId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("btn.Models.Provider", b =>
                {
                    b.Property<int>("ProviderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderID");

                    b.ToTable("Provider", (string)null);
                });

            modelBuilder.Entity("btn.Models.SellBill", b =>
                {
                    b.Property<int>("SellBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellBillId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SellBillId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SellBill", (string)null);
                });

            modelBuilder.Entity("btn.Models.SellBillDetail", b =>
                {
                    b.Property<int>("SellBillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellBillDetailId"), 1L, 1);

                    b.Property<decimal>("ProductSellAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SellBillId")
                        .HasColumnType("int");

                    b.Property<decimal>("SellDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SellBillDetailId");

                    b.HasIndex("SellBillId");

                    b.ToTable("SellBillDetail", (string)null);
                });

            modelBuilder.Entity("btn.Models.ImportBill", b =>
                {
                    b.HasOne("btn.Models.Employee", "Employee")
                        .WithMany("ImportBills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("btn.Models.Provider", "Provider")
                        .WithMany("ImportBills")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("btn.Models.ImportBillDetail", b =>
                {
                    b.HasOne("btn.Models.ImportBill", "ImportBill")
                        .WithMany("ImportBillDetails")
                        .HasForeignKey("ImportBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("btn.Models.Product", "Product")
                        .WithMany("ImportBillDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportBill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("btn.Models.Product", b =>
                {
                    b.HasOne("btn.Models.SellBillDetail", null)
                        .WithMany("Products")
                        .HasForeignKey("SellBillDetailId");
                });

            modelBuilder.Entity("btn.Models.SellBill", b =>
                {
                    b.HasOne("btn.Models.Customer", "Customer")
                        .WithMany("SellBills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("btn.Models.Employee", "Employee")
                        .WithMany("SellBills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("btn.Models.SellBillDetail", b =>
                {
                    b.HasOne("btn.Models.SellBill", "SellBill")
                        .WithMany("SellBillDetails")
                        .HasForeignKey("SellBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SellBill");
                });

            modelBuilder.Entity("btn.Models.Customer", b =>
                {
                    b.Navigation("SellBills");
                });

            modelBuilder.Entity("btn.Models.Employee", b =>
                {
                    b.Navigation("ImportBills");

                    b.Navigation("SellBills");
                });

            modelBuilder.Entity("btn.Models.ImportBill", b =>
                {
                    b.Navigation("ImportBillDetails");
                });

            modelBuilder.Entity("btn.Models.Product", b =>
                {
                    b.Navigation("ImportBillDetails");
                });

            modelBuilder.Entity("btn.Models.Provider", b =>
                {
                    b.Navigation("ImportBills");
                });

            modelBuilder.Entity("btn.Models.SellBill", b =>
                {
                    b.Navigation("SellBillDetails");
                });

            modelBuilder.Entity("btn.Models.SellBillDetail", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
