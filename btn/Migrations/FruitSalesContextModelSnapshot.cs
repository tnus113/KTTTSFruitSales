// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using btn.Data;

#nullable disable

namespace btn.Migrations
{
    [DbContext(typeof(FruitSalesContext))]
    partial class FruitSalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("btn.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "China",
                            CustomerName = "Jane",
                            PhoneNumber = "0235241414"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "America",
                            CustomerName = "Dick",
                            PhoneNumber = "0325257864"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "VietNam",
                            CustomerName = "Clare",
                            PhoneNumber = "0942678251"
                        });
                });

            modelBuilder.Entity("btn.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "China",
                            DateOfBirth = new DateTime(2024, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeName = "Manaka",
                            Gender = "Male",
                            PhoneNumber = "0914736241",
                            Position = "Part-time worker"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Address = "China",
                            DateOfBirth = new DateTime(2024, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeName = "KDABest",
                            Gender = "Female",
                            PhoneNumber = "09148745441",
                            Position = "Part-time worker"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Address = "China",
                            DateOfBirth = new DateTime(2024, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeName = "Bruce Wayne",
                            Gender = "Male",
                            PhoneNumber = "0918746241",
                            Position = "Part-time worker"
                        });
                });

            modelBuilder.Entity("btn.Models.ImportBill", b =>
                {
                    b.Property<int>("ImportBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportBillId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImportsDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ImportBillId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProviderId");

                    b.ToTable("ImportBills");

                    b.HasData(
                        new
                        {
                            ImportBillId = 1,
                            EmployeeId = 1,
                            ImportsDate = new DateTime(2024, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProviderId = 1,
                            TotalMoney = 300000m
                        },
                        new
                        {
                            ImportBillId = 2,
                            EmployeeId = 2,
                            ImportsDate = new DateTime(2023, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProviderId = 2,
                            TotalMoney = 400000m
                        },
                        new
                        {
                            ImportBillId = 3,
                            EmployeeId = 3,
                            ImportsDate = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProviderId = 3,
                            TotalMoney = 700000m
                        });
                });

            modelBuilder.Entity("btn.Models.ImportBillDetail", b =>
                {
                    b.Property<int>("ImportBillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportBillDetailId"), 1L, 1);

                    b.Property<int>("ImportBillId")
                        .HasColumnType("int");

                    b.Property<decimal>("ImportDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductImportAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImportBillDetailId");

                    b.HasIndex("ImportBillId");

                    b.HasIndex("ProductId");

                    b.ToTable("ImportBillDetails");

                    b.HasData(
                        new
                        {
                            ImportBillDetailId = 1,
                            ImportBillId = 1,
                            ImportDiscount = 30m,
                            ProductId = 1,
                            ProductImportAmount = 100m,
                            ProductName = ""
                        },
                        new
                        {
                            ImportBillDetailId = 2,
                            ImportBillId = 2,
                            ImportDiscount = 30m,
                            ProductId = 2,
                            ProductImportAmount = 200m,
                            ProductName = ""
                        },
                        new
                        {
                            ImportBillDetailId = 3,
                            ImportBillId = 3,
                            ImportDiscount = 30m,
                            ProductId = 3,
                            ProductImportAmount = 300m,
                            ProductName = ""
                        });
                });

            modelBuilder.Entity("btn.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MoneyOnImport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoneyOnSell")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvidePlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Amount = 10000,
                            Character = "Juicy",
                            Color = "Blue",
                            MoneyOnImport = 30000m,
                            MoneyOnSell = 40000m,
                            ProductName = "Chemistry",
                            ProvidePlace = "China",
                            Unit = "Kg",
                            Uses = "Ngon"
                        },
                        new
                        {
                            ProductId = 2,
                            Amount = 5000,
                            Character = "Juicy",
                            Color = "Green",
                            MoneyOnImport = 40000m,
                            MoneyOnSell = 50000m,
                            ProductName = "Microeconomics",
                            ProvidePlace = "America",
                            Unit = "Kg",
                            Uses = "Ngon"
                        },
                        new
                        {
                            ProductId = 3,
                            Amount = 15000,
                            Character = "Juicy",
                            Color = "Red",
                            MoneyOnImport = 60000m,
                            MoneyOnSell = 70000m,
                            ProductName = "Macroeconomics",
                            ProvidePlace = "VietNam",
                            Unit = "Kg",
                            Uses = "Ngon"
                        });
                });

            modelBuilder.Entity("btn.Models.Provider", b =>
                {
                    b.Property<int>("ProviderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderID");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            ProviderID = 1,
                            Address = "China",
                            PhoneNumber = "0235241414",
                            ProviderName = "Vinamilk"
                        },
                        new
                        {
                            ProviderID = 2,
                            Address = "America",
                            PhoneNumber = "0235511414",
                            ProviderName = "HoyoFruit"
                        },
                        new
                        {
                            ProviderID = 3,
                            Address = "VietNam",
                            PhoneNumber = "0975241414",
                            ProviderName = "BanaHill"
                        });
                });

            modelBuilder.Entity("btn.Models.SellBill", b =>
                {
                    b.Property<int>("SellBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellBillId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SellBillId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SellBills");

                    b.HasData(
                        new
                        {
                            SellBillId = 1,
                            CustomerId = 1,
                            EmployeeId = 1,
                            SalesDate = new DateTime(2024, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalMoney = 300000m
                        },
                        new
                        {
                            SellBillId = 2,
                            CustomerId = 2,
                            EmployeeId = 2,
                            SalesDate = new DateTime(2024, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalMoney = 400000m
                        },
                        new
                        {
                            SellBillId = 3,
                            CustomerId = 3,
                            EmployeeId = 3,
                            SalesDate = new DateTime(2024, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalMoney = 700000m
                        });
                });

            modelBuilder.Entity("btn.Models.SellBillDetail", b =>
                {
                    b.Property<int>("SellBillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellBillDetailId"), 1L, 1);

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductSellAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SellBillId")
                        .HasColumnType("int");

                    b.Property<decimal>("SellDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SellBillDetailId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellBillId");

                    b.ToTable("SellBillsDetails");

                    b.HasData(
                        new
                        {
                            SellBillDetailId = 1,
                            ProductSellAmount = 10m,
                            SellBillId = 1,
                            SellDiscount = 50m
                        },
                        new
                        {
                            SellBillDetailId = 2,
                            ProductSellAmount = 20m,
                            SellBillId = 2,
                            SellDiscount = 50m
                        },
                        new
                        {
                            SellBillDetailId = 3,
                            ProductSellAmount = 30m,
                            SellBillId = 3,
                            SellDiscount = 50m
                        });
                });

            modelBuilder.Entity("btn.Models.ImportBill", b =>
                {
                    b.HasOne("btn.Models.Employee", "Employee")
                        .WithMany("ImportBills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("btn.Models.Provider", "Provider")
                        .WithMany("ImportBills")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("btn.Models.ImportBillDetail", b =>
                {
                    b.HasOne("btn.Models.ImportBill", "ImportBill")
                        .WithMany("ImportBillDetails")
                        .HasForeignKey("ImportBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("btn.Models.Product", "Product")
                        .WithMany("ImportBillDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportBill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("btn.Models.SellBill", b =>
                {
                    b.HasOne("btn.Models.Customer", "Customer")
                        .WithMany("SellBills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("btn.Models.Employee", "Employee")
                        .WithMany("SellBills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("btn.Models.SellBillDetail", b =>
                {
                    b.HasOne("btn.Models.Product", "Product")
                        .WithMany("SellBillDetails")
                        .HasForeignKey("ProductId");

                    b.HasOne("btn.Models.SellBill", "SellBill")
                        .WithMany("SellBillDetails")
                        .HasForeignKey("SellBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SellBill");
                });

            modelBuilder.Entity("btn.Models.Customer", b =>
                {
                    b.Navigation("SellBills");
                });

            modelBuilder.Entity("btn.Models.Employee", b =>
                {
                    b.Navigation("ImportBills");

                    b.Navigation("SellBills");
                });

            modelBuilder.Entity("btn.Models.ImportBill", b =>
                {
                    b.Navigation("ImportBillDetails");
                });

            modelBuilder.Entity("btn.Models.Product", b =>
                {
                    b.Navigation("ImportBillDetails");

                    b.Navigation("SellBillDetails");
                });

            modelBuilder.Entity("btn.Models.Provider", b =>
                {
                    b.Navigation("ImportBills");
                });

            modelBuilder.Entity("btn.Models.SellBill", b =>
                {
                    b.Navigation("SellBillDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
